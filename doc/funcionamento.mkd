npx prisma init
npx prisma format
npx prisma migrate dev
npx prisma db seed

todo: 

- colocar o name do restaurante como unique
- colocar um login para o estabelecimento
- colocar um historico de pedidos com filtro de dia, semana, mes, ano e all
- se o pedido for para viagem pedir pagamento

- tenho que fazer os pedidos ficarem salvos no localstorage

commit:

nesse projeto vou usar o contextApi, mas se fosse usar o zustand com o  middleware persist  e o localStorage

```ts
import create from "zustand";
import { persist } from "zustand/middleware";

// Definição do tipo de estado
type Store = {
  isTrue: boolean;
  toggle: () => void;
};

// Criação do estado com persistência usando o middleware `persist`
export const useStore = create<Store>(
  persist(
    (set) => ({
      isTrue: false,
      toggle: () => set((state) => ({ isTrue: !state.isTrue })),
    }),
    {
      name: "zustand-storage", // Nome usado para armazenar o estado no localStorage
      getStorage: () => localStorage, // Usando o localStorage para persistência
    }
  )
);

```

``` typescript
// client.ts
import { PrismaClient } from '@prisma/client'

// Instância global para desenvolvimento (evitar múltiplas instâncias no hot reloading)
const globalForDb = globalThis as unknown as { db: PrismaClient }

export const db =
  process.env.NODE_ENV === 'production'
    ? new PrismaClient()  // Em produção, cria uma única instância
    : globalForDb.db || new PrismaClient()  // Em desenvolvimento, reutiliza a instância global

// Apenas em desenvolvimento, armazenamos a instância global para evitar recriação
if (process.env.NODE_ENV !== 'production') {
  globalForDb.db = db
}
```


usamos zod e reacth hoock forms por meio do component form do shadcn, react number format